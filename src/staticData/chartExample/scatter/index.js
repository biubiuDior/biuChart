/*
 * @Name: 散点图集静态数据
 * @Description: 描述信息
 * @Author: biubiu
 * @Date: 2024-07-18
*/

import scatter1Img from "@/assets/image/chartExample/scatter/scatter1.png";
import scatter2Img from "@/assets/image/chartExample/scatter/scatter2.png";

export const ScatterChartData = [
  {
    id: "scatter2",
    name: "学生表现",
    type: ["scatter"],
    date: "2024.07.18",
    exampleImg: scatter2Img,
    remark: "双类型分布",
    renderer: "svg",
    code: "const nameList = ['2019-2020', '2020-2021', '2021-2022', '2022-2023'];\nconst typeList = [\n  '奖助学金',\n  '荣誉称号',\n  '竞赛获奖',\n  '学术科研',\n  '资格证书',\n  '实践活动',\n  '通报表扬'\n];\nconst valueList = [\n  [5, 5, 5, 5],\n  [2, 2, 2, 2],\n  [5, 5, 5, 5],\n  [5, 5, 5, 5],\n  [5, 5, 5, 5],\n  [5, 5, 5, 5],\n  [5, 5, 5, 5]\n];\nconst unitList = [\n  { name: '项', value: 0 },\n  { name: '项', value: 0 },\n  { name: '分', value: 1 },\n  { name: '分', value: 1 },\n  { name: '分', value: 1 },\n  { name: '分', value: 1 },\n  { name: '分', value: 1 }\n];\nconst visualMapList = [\n  [\n    { label: '>6项', min: 7 },\n    { label: '5-6项', min: 5, max: 6 },\n    { label: '3-4项', min: 3, max: 4 },\n    { label: '1-2项', min: 1, max: 2 }\n  ],\n  [\n    { label: '>6分', min: 7 },\n    { label: '5-6分', min: 5, max: 6 },\n    { label: '3-4分', min: 3, max: 4 },\n    { label: '1-2分', min: 1, max: 2 }\n  ]\n];\n\nconst flattenArray = (arr) => {\n  return arr.reduce(\n    (acc, val) =>\n      Array.isArray(val) ? acc.concat(flattenArray(val)) : acc.concat(val),\n    []\n  );\n};\n\n/* 样式 */\nconst colorList = [\n  [\n    {\n      type: 'linear',\n      x: 0,\n      y: 0,\n      x2: 0,\n      y2: 1,\n      colorStops: [\n        {\n          offset: 0,\n          color: 'rgba(251, 114, 147, 1)'\n        },\n        {\n          offset: 1,\n          color: 'rgba(234, 62, 104, 1)'\n        }\n      ],\n      global: false\n    },\n    {\n      type: 'linear',\n      x: 0,\n      y: 0,\n      x2: 0,\n      y2: 1,\n      colorStops: [\n        {\n          offset: 0,\n          color: 'rgba(251, 114, 147, 0.7)'\n        },\n        {\n          offset: 1,\n          color: 'rgba(234, 62, 104, 0.7)'\n        }\n      ],\n      global: false\n    },\n    {\n      type: 'linear',\n      x: 0,\n      y: 0,\n      x2: 0,\n      y2: 1,\n      colorStops: [\n        {\n          offset: 0,\n          color: 'rgba(251, 114, 147, 0.5)'\n        },\n        {\n          offset: 1,\n          color: 'rgba(234, 62, 104, 0.5)'\n        }\n      ],\n      global: false\n    },\n    {\n      type: 'linear',\n      x: 0,\n      y: 0,\n      x2: 0,\n      y2: 1,\n      colorStops: [\n        {\n          offset: 0,\n          color: 'rgba(251, 114, 147, 0.2)'\n        },\n        {\n          offset: 1,\n          color: 'rgba(234, 62, 104, 0.2)'\n        }\n      ],\n      global: false\n    }\n  ],\n  [\n    {\n      type: 'linear',\n      x: 0,\n      y: 0,\n      x2: 0,\n      y2: 1,\n      colorStops: [\n        {\n          offset: 0,\n          color: 'rgba(92, 190, 255, 1)'\n        },\n        {\n          offset: 1,\n          color: 'rgba(57, 126, 240, 1)'\n        }\n      ],\n      global: false\n    },\n    {\n      type: 'linear',\n      x: 0,\n      y: 0,\n      x2: 0,\n      y2: 1,\n      colorStops: [\n        {\n          offset: 0,\n          color: 'rgba(57, 126, 240, 0.7)'\n        },\n        {\n          offset: 1,\n          color: 'rgba(57, 126, 240, 0.7)'\n        }\n      ],\n      global: false\n    },\n    {\n      type: 'linear',\n      x: 0,\n      y: 0,\n      x2: 0,\n      y2: 1,\n      colorStops: [\n        {\n          offset: 0,\n          color: 'rgba(57, 126, 240, 0.5)'\n        },\n        {\n          offset: 1,\n          color: 'rgba(57, 126, 240, 0.5)'\n        }\n      ],\n      global: false\n    },\n    {\n      type: 'linear',\n      x: 0,\n      y: 0,\n      x2: 0,\n      y2: 1,\n      colorStops: [\n        {\n          offset: 0,\n          color: 'rgba(57, 126, 240, 0.2)'\n        },\n        {\n          offset: 1,\n          color: 'rgba(57, 126, 240, 0.2)'\n        }\n      ],\n      global: false\n    }\n  ]\n];\n\n/* 数据整合 */\nlet visualMapData = [];\nconst topList = ['40%', '60%'];\nvisualMapList.map((item, index) => {\n  let piecesData = [];\n  item.map((childItem, childIndex) => {\n    piecesData.push({\n      ...childItem,\n      color: colorList[index][childIndex]\n    });\n  });\n  visualMapData.push({\n    type: 'piecewise',\n    align: 'left',\n    itemWidth: 10,\n    itemHeight: 10,\n    itemSymbol: 'circle',\n    top: topList[index],\n    right: '0',\n    selectedMode: false,\n    pieces: piecesData,\n    textStyle: {\n      fontFamily: 'Source Han Sans CN-Regular',\n      fontWeight: 400,\n      fontSize: 12,\n      color: 'rgba(0,0,0,0.65)'\n    }\n  });\n});\n\nlet scatterData = [];\n\ntypeList.map((item, index) => {\n  let unit = unitList[index].name;\n  let unitValue = unitList[index].value;\n  nameList.map((childItem, childIndex) => {\n    let itemColor = '';\n    if (valueList[index][childIndex] > 6) {\n      itemColor = colorList[unitValue][0];\n    } else if (valueList[index][childIndex] > 4) {\n      itemColor = colorList[unitValue][1];\n    } else if (valueList[index][childIndex] > 2) {\n      itemColor = colorList[unitValue][2];\n    } else if (valueList[index][childIndex] > 0) {\n      itemColor = colorList[unitValue][3];\n    } else {\n      itemColor = 'transparent';\n    }\n    scatterData.push({\n      name: `${childItem}`,\n      value: [childIndex, index + 1, valueList[index][childIndex]],\n      itemName: item,\n      itemValue: valueList[index][childIndex],\n      itemUnit: unit,\n      symbolSize: 20,\n      itemStyle: {\n        color: itemColor\n      }\n    });\n  });\n});\n\noption = {\n  tooltip: {\n    confine: true,\n    formatter: (params) => {\n      console.log(params);\n      return `\n      <div style=\"font-size: 14px;font-family: Source Han Sans CN-Regular;font-weight: 400;color: rgba(0,0,0,0.65);margin-bottom:4px;\">${params.name}</div>\n      <div style=\"font-size: 14px;font-family: Source Han Sans CN-Regular;font-weight: 400;color: rgba(0,0,0,0.65);margin-bottom:4px;\">\n        ${params.data.itemName}\n        <span style=\"color: rgba(0,0,0,0.85);margin-left: 8px;\">${params.data.itemValue}${params.data.itemUnit}</span>\n      </div>\n      `;\n    },\n    extraCssText:\n      'background-color:#F6F9FD;padding:4px 8px;box-shadow: 0px 0px 4px 0px rgba(99,149,250,0.4);border-radius: 4px;border: unset;'\n  },\n  grid: {\n    top: '16',\n    right: '68',\n    left: '0',\n    bottom: '0',\n    containLabel: true\n  },\n  visualMap: visualMapData,\n  xAxis: {\n    type: 'category',\n    axisTick: { show: false },\n    axisLine: {\n      lineStyle: {\n        color: 'rgba(0,0,0,0.12)'\n      }\n    },\n    axisLabel: {\n      fontFamily: 'Source Han Sans CN-Regular',\n      fontWeight: 400,\n      fontSize: 14,\n      color: 'rgba(0,0,0,0.65)'\n    },\n    data: nameList\n  },\n  yAxis: {\n    type: 'category',\n    boundaryGap: false,\n    axisTick: { show: false },\n    axisLine: { show: false },\n    axisLabel: {\n      fontFamily: 'Source Han Sans CN-Regular',\n      fontWeight: 400,\n      fontSize: 14,\n      color: 'rgba(0,0,0,0.65)'\n    },\n    splitLine: {\n      show: true,\n      lineStyle: {\n        color: 'rgba(0,0,0,0.12)',\n        type: 'dashed'\n      }\n    },\n    data: ['', ...typeList]\n  },\n  series: [\n    {\n      name: '项',\n      type: 'scatter',\n      data: scatterData\n    }\n  ]\n};"
  },
  {
    id: "scatter1",
    name: "人均项目数量分布",
    type: ["scatter"],
    date: "2023.12.25",
    exampleImg: scatter1Img,
    remark: "中心坐标轴突出均值",
    renderer: "svg",
    code: "// 散点数据\nconst nameList = ['散点1', '散点2', '散点3', '散点4', '散点5'];\nconst xList = [0.12, 3.73, 2.4, 1, 1];\nconst yList = [16, 126, 30, 90, 1];\nlet center = [2, 90]; //中心点\n\n// 数据转换\nconst marksData = nameList.map((item, index) => ({\n  name: item,\n  value: [xList[index], yList[index]]\n}));\n\noption = {\n  tooltip: {\n    axisPointer: {\n      show: true,\n      type: 'shadow',\n      lineStyle: {\n        type: 'dashed',\n        width: 1\n      },\n      label: {\n        backgroundColor: '#555'\n      }\n    },\n    confine: true,\n    formatter: (params) => {\n      const { name, value } = params;\n      return `\n            <div style=\"font-size: 14px;font-family: Source Han Sans CN-Medium;font-weight: 500;color: #FFFFFF;margin-bottom:8px;\">${name}</div>\n            <div style=\"font-size: 14px;font-family: Source Han Sans CN-Medium;font-weight: 500;color: #FFFFFF;margin-bottom:4px;\">项目数量：${value[1]}个</div>\n            <div style=\"font-size: 14px;font-family: Source Han Sans CN-Medium;font-weight: 500;color: #FFFFFF;\">人均项目数量：${value[0]}个</div>\n         `;\n    },\n    extraCssText:\n      'opacity: 0.8;background-color:#050F1B;padding:12px;box-shadow: 1px 6px 15px 1px rgba(0,0,0,0.13);border-radius: 4px;filter: blur(undefinedpx);border:none;'\n  },\n  grid: {\n    left: 32,\n    right: 32,\n    bottom: 32,\n    top: 60,\n    containLabel: true\n  },\n  xAxis: {\n    type: 'value',\n    name: '人均项目数',\n    splitNumber: 5,\n    nameTextStyle: {\n      color: 'rgba(0,0,0,0.65)',\n      align: 'right',\n      verticalAlign: 'top',\n      padding: [8, 12, 0, 0]\n    },\n    axisLine: {\n      lineStyle: {\n        color: '#ddd'\n      }\n    },\n    axisLabel: {\n      color: '#666',\n      showMaxLabel: false\n    },\n    splitLine: {\n      lineStyle: {\n        color: '#eee',\n        type: 'dashed'\n      }\n    },\n    axisTick: {\n      show: false\n    }\n  },\n  yAxis: {\n    name: '项目数量',\n    nameTextStyle: {\n      color: 'rgba(0,0,0,0.65)',\n      align: 'left',\n      verticalAlign: 'center'\n    },\n    axisLine: {\n      lineStyle: {\n        color: '#ddd'\n      }\n    },\n    axisLabel: {\n      color: '#666'\n    },\n    splitLine: {\n      lineStyle: {\n        color: '#eee',\n        type: 'dashed'\n      }\n    }\n  },\n  series: [\n    {\n      type: 'scatter',\n      data: marksData,\n      symbolSize: 10,\n      label: {\n        show: false\n      },\n      itemStyle: {\n        shadowBlur: 2,\n        shadowColor: 'rgba(120, 36, 50, 0.5)',\n        shadowOffsetY: 1,\n        color: '#5B8FF9'\n      },\n      emphasis: {\n        scale: 1.5\n      },\n      // 中心点交集象限轴\n      markLine: {\n        silent: true, // 是否不响应鼠标事件\n        precision: 2, // 精度\n        symbol: 'none',\n        lineStyle: {\n          type: 'solid',\n          color: '#FA8974'\n        },\n        label: {\n          show: false\n        },\n        data: [\n          {\n            xAxis: center[0]\n          },\n          {\n            yAxis: center[1]\n          }\n        ]\n      }\n    }\n  ]\n};"
  },
]